mtcars
table(mtcars)
table(mtcars$am, mtcars$vs)
table(mtcars$am, mtcars$vs)[0]
table(mtcars$am, mtcars$vs)[0][0]
table(mtcars$am, mtcars$vs)$0
margin.table(mtcars,1)
13/15
install.packages("caret")
install.packages
?install.packages
library(caret)
caret::confusionMatrix(mtcars)
mtcars
?caret::confusionMatrix
iris$Species
2:1
2:1:3
2:0
install.packages("e1071")
setwd("~/Desktop/CUNYSPS/DATA621/Homework3")
ls()
dir()
crime <- read.csv("crime-training-data.csv")
names(crime)
head(crime, n= 40)
summary(crime)
str(crime)
as.logical(crime$chas)
library(MASS)
boxcox(crime)
boxcox(target ~, data = crime)
boxcox(target ~. , data = crime)
boxcox(target ~ log(rad) + log(indus) , data = crime)
crime$target
?lm
?glm
?logit
met
crime
melt(crime)
?melt
??melt
names(crime)
x <- melt(crime, id = "target")
library(reshape2)
x <- melt(crime, id = "target")
x
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot() +
facet_wrap(~ target, scales = "free")
library(ggplot2)
library(ggplot2)
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot() +
facet_wrap(~ target, scales = "free")
melted <- melt(crime, id="target")
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot() +
facet_wrap(~ target, scales = "free")
melted <- melt(crime, id="target", measure.vars=names(crime))
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot() +
facet_wrap(~ target, scales = "free")
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot()
melted <- melt(crime, id="target", measure.vars=names(crime))
melted
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox')
)
melted
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox')
)
ggplot(data = melted, aes(x = target, y = value)) +
geom_boxplot(aes(color = variable))
ggplot(melted) + geom_boxplot(aes(x=ID, y=value, color=variable))
ggplot(melted) + geom_boxplot(aes(x=id, y=value, color=variable))
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox')
)
ggplot(melted) + geom_boxplot(aes(x=target, y=value, color=variable))
?names
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox')
)
?colnames
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax', 'ptratio', 'black', 'lstat', 'medv'))
)
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax', 'ptratio', 'black', 'lstat', 'medv'))
ggplot(melted) + geom_boxplot(aes(x=target, y=value, color=variable))
crime$target
ggplot(melted) + geom_boxplot(aes(x=factor(target), y=value, color=variable))
melted <- melt(crime, id="target", measure.vars=c('zn', 'indus', 'nox', 'rm', 'age', 'dis', 'rad', 'tax', 'ptratio', 'black', 'lstat', 'medv'))
ggplot(melted) + geom_boxplot(aes(x=factor(target), y=value, color=variable))
corr(crime$target, crime$nox)
?corr
?cor
cor(crime$target, crime$nox)
cor(crime$target, crime$age)
?glm
library(caret)
install.packages("mlbench", dependencies = TRUE)
library(mlbench)
library(caret)
data("PimaIndiansDiabetes")
PimaIndiansDiabetes
str(PimaIndiansDiabetes)
correlation_matrix <- cor(PimaIndiansDiabetes[,:1:8])
correlation_matrix <- cor(PimaIndiansDiabetes[,1:8])
print(correlation_matrix)
findCorrelation(correlation_matrix, cutoff = 0.75)
highlyCorrelated <- findCorrelation(correlation_matrix, cutoff = 0.75)
highlyCorrelated
highlyCorrelated <- findCorrelation(correlation_matrix, cutoff = 0.4)
highlyCorrelated
highlyCorrelated <- findCorrelation(correlation_matrix, cutoff = 0.1)
highlyCorrelated
str(crime)
1:15
crime
str(crime)
crime$tax
crime$black
crime <- read.csv("crime-training-data.csv")
summary(crime)
str(crime)
subset(crime,select = -tax)
subset(crime, select = -chas)
x<-subset(crime, select = -chas)
str(x)
x<-subset(crime, select = -c(chas,target))
x
mtcars
crime[,-c("chas")]
crime[,-c(chas)]
crime[,c(chas)]
crime[,c("chas")]
crime[,!c("chas")]
names(crime)
crime[,1]
crime$indus
data(sda)
install.packages("lasso2")
install.packages("glmnet")
glmnet::glmnet(crime[,1:13], crime$target, family = "binomial", alpha = 1, pmax = 15)
library(glmnet)
?cv.glmnet()
library(sda)
as.matrix(crime[,1:13])
str(as.matrix(crime[,1:13]))
str(crime)
?predict.glmnet()
?predict
library(caret)
?AIC
crime
2**8
caret::
library(pROC)
?predict.glmnet
?glmnet::predict.glmnet
?predict
?data.frame
# predict on the training data to compute stats
predict_train <- predict(fit, type = "class", newx = data.matrix(crime[,1:13]),
s = "lambda.1se")
